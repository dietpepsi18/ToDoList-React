{"ast":null,"code":"var _jsxFileName = \"/Users/hongzuoguang/Documents/Projects/React.ToDoList/src/components/Header/Header.jsx\";\nimport React, { Component } from 'react';\nimport { nanoid } from \"nanoid\";\nimport \"./Header.css\";\nimport ProprTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Header extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleKeyUp = event => {\n      //case1：if the key pressed is not Enter\n      if (event.keyCode !== 13) {\n        return;\n      } //case2: if user's entering is empty\n\n\n      if (event.target.value.trim === \"\") {\n        alert(\"It cannot be empty\");\n        return;\n      } //creater a new task object\n\n\n      const todoObj = {\n        id: nanoid(),\n        name: event.target.value,\n        done: false\n      }; //call the method passed from App\n\n      this.props.addTodo(todoObj); //after successfully add a new task, empty input element's value\n\n      event.target.value = \"\";\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-header\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Please enter your new task here\",\n        onKeyUp: this.handleKeyUp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  } //callback: when the user releases a key \n\n\n}\nHeader.propsType = {\n  addTodo: ProprTypes.func.isRequired\n};","map":{"version":3,"names":["React","Component","nanoid","ProprTypes","Header","handleKeyUp","event","keyCode","target","value","trim","alert","todoObj","id","name","done","props","addTodo","render","propsType","func","isRequired"],"sources":["/Users/hongzuoguang/Documents/Projects/React.ToDoList/src/components/Header/Header.jsx"],"sourcesContent":["import React, { Component } from 'react'\nimport {nanoid} from \"nanoid\"  \nimport \"./Header.css\"\nimport ProprTypes from \"prop-types\"\n\nexport default class Header extends Component {\n\n  //set limitation to ensure attributes in props have correct datatypes\n  static propsType = {\n    addTodo: ProprTypes.func.isRequired\n  }\n\n  render() {\n    return (\n      <div className=\"todo-header\">\n            <input type=\"text\" placeholder=\"Please enter your new task here\" \n                   onKeyUp={this.handleKeyUp}/>\n      </div>\n    )\n  }\n\n  //callback: when the user releases a key \n  handleKeyUp = (event) => {  \n    \n    //case1：if the key pressed is not Enter\n    if(event.keyCode !== 13){\n      return;    \n    }\n\n    //case2: if user's entering is empty\n    if(event.target.value.trim === \"\"){\n      alert(\"It cannot be empty\");\n      return;\n    }\n\n    //creater a new task object\n    const todoObj = {id: nanoid(), name: event.target.value, done: false}\n    \n    //call the method passed from App\n    this.props.addTodo(todoObj)\n\n    //after successfully add a new task, empty input element's value\n    event.target.value = \"\";\n  }\n}\n\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAO,cAAP;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,eAAe,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;EAAA;IAAA;;IAAA,KAiB5CI,WAjB4C,GAiB7BC,KAAD,IAAW;MAEvB;MACA,IAAGA,KAAK,CAACC,OAAN,KAAkB,EAArB,EAAwB;QACtB;MACD,CALsB,CAOvB;;;MACA,IAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBC,IAAnB,KAA4B,EAA/B,EAAkC;QAChCC,KAAK,CAAC,oBAAD,CAAL;QACA;MACD,CAXsB,CAavB;;;MACA,MAAMC,OAAO,GAAG;QAACC,EAAE,EAAEX,MAAM,EAAX;QAAeY,IAAI,EAAER,KAAK,CAACE,MAAN,CAAaC,KAAlC;QAAyCM,IAAI,EAAE;MAA/C,CAAhB,CAduB,CAgBvB;;MACA,KAAKC,KAAL,CAAWC,OAAX,CAAmBL,OAAnB,EAjBuB,CAmBvB;;MACAN,KAAK,CAACE,MAAN,CAAaC,KAAb,GAAqB,EAArB;IACD,CAtC2C;EAAA;;EAO5CS,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,aAAf;MAAA,uBACM;QAAO,IAAI,EAAC,MAAZ;QAAmB,WAAW,EAAC,iCAA/B;QACO,OAAO,EAAE,KAAKb;MADrB;QAAA;QAAA;QAAA;MAAA;IADN;MAAA;MAAA;MAAA;IAAA,QADF;EAMD,CAd2C,CAgB5C;;;AAhB4C;AAAzBD,M,CAGZe,S,GAAY;EACjBF,OAAO,EAAEd,UAAU,CAACiB,IAAX,CAAgBC;AADR,C"},"metadata":{},"sourceType":"module"}